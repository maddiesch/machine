// Code generated by protoc-gen-go. DO NOT EDIT.
// source: machine.proto

package machine

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TokenIL_Kind int32

const (
	TokenIL_NONE   TokenIL_Kind = 0
	TokenIL_VALUE  TokenIL_Kind = 1
	TokenIL_OPEN   TokenIL_Kind = 2
	TokenIL_CLOSE  TokenIL_Kind = 3
	TokenIL_END    TokenIL_Kind = 4
	TokenIL_DOT    TokenIL_Kind = 5
	TokenIL_PIPE   TokenIL_Kind = 6
	TokenIL_ASSIGN TokenIL_Kind = 7
	TokenIL_VAR    TokenIL_Kind = 8
)

var TokenIL_Kind_name = map[int32]string{
	0: "NONE",
	1: "VALUE",
	2: "OPEN",
	3: "CLOSE",
	4: "END",
	5: "DOT",
	6: "PIPE",
	7: "ASSIGN",
	8: "VAR",
}

var TokenIL_Kind_value = map[string]int32{
	"NONE":   0,
	"VALUE":  1,
	"OPEN":   2,
	"CLOSE":  3,
	"END":    4,
	"DOT":    5,
	"PIPE":   6,
	"ASSIGN": 7,
	"VAR":    8,
}

func (x TokenIL_Kind) String() string {
	return proto.EnumName(TokenIL_Kind_name, int32(x))
}

func (TokenIL_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{0, 0}
}

type NodeIL_Kind int32

const (
	NodeIL_NONE   NodeIL_Kind = 0
	NodeIL_ROOT   NodeIL_Kind = 1
	NodeIL_GROUP  NodeIL_Kind = 2
	NodeIL_FUNC   NodeIL_Kind = 3
	NodeIL_VALUE  NodeIL_Kind = 4
	NodeIL_ASSIGN NodeIL_Kind = 5
	NodeIL_VAR    NodeIL_Kind = 6
	NodeIL_NAT    NodeIL_Kind = 7
)

var NodeIL_Kind_name = map[int32]string{
	0: "NONE",
	1: "ROOT",
	2: "GROUP",
	3: "FUNC",
	4: "VALUE",
	5: "ASSIGN",
	6: "VAR",
	7: "NAT",
}

var NodeIL_Kind_value = map[string]int32{
	"NONE":   0,
	"ROOT":   1,
	"GROUP":  2,
	"FUNC":   3,
	"VALUE":  4,
	"ASSIGN": 5,
	"VAR":    6,
	"NAT":    7,
}

func (x NodeIL_Kind) String() string {
	return proto.EnumName(NodeIL_Kind_name, int32(x))
}

func (NodeIL_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{1, 0}
}

type NodeIL_DValue_Kind int32

const (
	NodeIL_DValue_STR  NodeIL_DValue_Kind = 0
	NodeIL_DValue_FLT  NodeIL_DValue_Kind = 1
	NodeIL_DValue_BOOL NodeIL_DValue_Kind = 2
)

var NodeIL_DValue_Kind_name = map[int32]string{
	0: "STR",
	1: "FLT",
	2: "BOOL",
}

var NodeIL_DValue_Kind_value = map[string]int32{
	"STR":  0,
	"FLT":  1,
	"BOOL": 2,
}

func (x NodeIL_DValue_Kind) String() string {
	return proto.EnumName(NodeIL_DValue_Kind_name, int32(x))
}

func (NodeIL_DValue_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{1, 0, 0}
}

type TokenIL struct {
	Kind                 TokenIL_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=machine.TokenIL_Kind" json:"kind,omitempty"`
	Value                string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Line                 uint32       `protobuf:"varint,3,opt,name=line,proto3" json:"line,omitempty"`
	Column               uint32       `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TokenIL) Reset()         { *m = TokenIL{} }
func (m *TokenIL) String() string { return proto.CompactTextString(m) }
func (*TokenIL) ProtoMessage()    {}
func (*TokenIL) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{0}
}

func (m *TokenIL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenIL.Unmarshal(m, b)
}
func (m *TokenIL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenIL.Marshal(b, m, deterministic)
}
func (m *TokenIL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenIL.Merge(m, src)
}
func (m *TokenIL) XXX_Size() int {
	return xxx_messageInfo_TokenIL.Size(m)
}
func (m *TokenIL) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenIL.DiscardUnknown(m)
}

var xxx_messageInfo_TokenIL proto.InternalMessageInfo

func (m *TokenIL) GetKind() TokenIL_Kind {
	if m != nil {
		return m.Kind
	}
	return TokenIL_NONE
}

func (m *TokenIL) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenIL) GetLine() uint32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *TokenIL) GetColumn() uint32 {
	if m != nil {
		return m.Column
	}
	return 0
}

type NodeIL struct {
	Id                   []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind                 NodeIL_Kind    `protobuf:"varint,2,opt,name=kind,proto3,enum=machine.NodeIL_Kind" json:"kind,omitempty"`
	Children             []*NodeIL      `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	Chained              *NodeIL        `protobuf:"bytes,4,opt,name=chained,proto3" json:"chained,omitempty"`
	Value                *NodeIL_DValue `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	SubType              string         `protobuf:"bytes,6,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NodeIL) Reset()         { *m = NodeIL{} }
func (m *NodeIL) String() string { return proto.CompactTextString(m) }
func (*NodeIL) ProtoMessage()    {}
func (*NodeIL) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{1}
}

func (m *NodeIL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeIL.Unmarshal(m, b)
}
func (m *NodeIL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeIL.Marshal(b, m, deterministic)
}
func (m *NodeIL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeIL.Merge(m, src)
}
func (m *NodeIL) XXX_Size() int {
	return xxx_messageInfo_NodeIL.Size(m)
}
func (m *NodeIL) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeIL.DiscardUnknown(m)
}

var xxx_messageInfo_NodeIL proto.InternalMessageInfo

func (m *NodeIL) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NodeIL) GetKind() NodeIL_Kind {
	if m != nil {
		return m.Kind
	}
	return NodeIL_NONE
}

func (m *NodeIL) GetChildren() []*NodeIL {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *NodeIL) GetChained() *NodeIL {
	if m != nil {
		return m.Chained
	}
	return nil
}

func (m *NodeIL) GetValue() *NodeIL_DValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *NodeIL) GetSubType() string {
	if m != nil {
		return m.SubType
	}
	return ""
}

type NodeIL_DValue struct {
	Kind                 NodeIL_DValue_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=machine.NodeIL_DValue_Kind" json:"kind,omitempty"`
	Str                  string             `protobuf:"bytes,2,opt,name=str,proto3" json:"str,omitempty"`
	Flt                  float64            `protobuf:"fixed64,3,opt,name=flt,proto3" json:"flt,omitempty"`
	Bool                 bool               `protobuf:"varint,4,opt,name=bool,proto3" json:"bool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NodeIL_DValue) Reset()         { *m = NodeIL_DValue{} }
func (m *NodeIL_DValue) String() string { return proto.CompactTextString(m) }
func (*NodeIL_DValue) ProtoMessage()    {}
func (*NodeIL_DValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{1, 0}
}

func (m *NodeIL_DValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeIL_DValue.Unmarshal(m, b)
}
func (m *NodeIL_DValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeIL_DValue.Marshal(b, m, deterministic)
}
func (m *NodeIL_DValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeIL_DValue.Merge(m, src)
}
func (m *NodeIL_DValue) XXX_Size() int {
	return xxx_messageInfo_NodeIL_DValue.Size(m)
}
func (m *NodeIL_DValue) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeIL_DValue.DiscardUnknown(m)
}

var xxx_messageInfo_NodeIL_DValue proto.InternalMessageInfo

func (m *NodeIL_DValue) GetKind() NodeIL_DValue_Kind {
	if m != nil {
		return m.Kind
	}
	return NodeIL_DValue_STR
}

func (m *NodeIL_DValue) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *NodeIL_DValue) GetFlt() float64 {
	if m != nil {
		return m.Flt
	}
	return 0
}

func (m *NodeIL_DValue) GetBool() bool {
	if m != nil {
		return m.Bool
	}
	return false
}

type ProgramIL struct {
	Id                   []byte            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Source               string            `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Entry                *NodeIL           `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
	FuncCalls            map[string]uint64 `protobuf:"bytes,4,rep,name=func_calls,json=funcCalls,proto3" json:"func_calls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProgramIL) Reset()         { *m = ProgramIL{} }
func (m *ProgramIL) String() string { return proto.CompactTextString(m) }
func (*ProgramIL) ProtoMessage()    {}
func (*ProgramIL) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{2}
}

func (m *ProgramIL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgramIL.Unmarshal(m, b)
}
func (m *ProgramIL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgramIL.Marshal(b, m, deterministic)
}
func (m *ProgramIL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramIL.Merge(m, src)
}
func (m *ProgramIL) XXX_Size() int {
	return xxx_messageInfo_ProgramIL.Size(m)
}
func (m *ProgramIL) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramIL.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramIL proto.InternalMessageInfo

func (m *ProgramIL) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProgramIL) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ProgramIL) GetEntry() *NodeIL {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *ProgramIL) GetFuncCalls() map[string]uint64 {
	if m != nil {
		return m.FuncCalls
	}
	return nil
}

func init() {
	proto.RegisterEnum("machine.TokenIL_Kind", TokenIL_Kind_name, TokenIL_Kind_value)
	proto.RegisterEnum("machine.NodeIL_Kind", NodeIL_Kind_name, NodeIL_Kind_value)
	proto.RegisterEnum("machine.NodeIL_DValue_Kind", NodeIL_DValue_Kind_name, NodeIL_DValue_Kind_value)
	proto.RegisterType((*TokenIL)(nil), "machine.TokenIL")
	proto.RegisterType((*NodeIL)(nil), "machine.NodeIL")
	proto.RegisterType((*NodeIL_DValue)(nil), "machine.NodeIL.DValue")
	proto.RegisterType((*ProgramIL)(nil), "machine.ProgramIL")
	proto.RegisterMapType((map[string]uint64)(nil), "machine.ProgramIL.FuncCallsEntry")
}

func init() { proto.RegisterFile("machine.proto", fileDescriptor_4b4e4a03b74bd47d) }

var fileDescriptor_4b4e4a03b74bd47d = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xdf, 0x8e, 0xd2, 0x40,
	0x14, 0xc6, 0xb7, 0xff, 0xdb, 0xa3, 0xbb, 0x4e, 0x26, 0x2b, 0xa9, 0xeb, 0x0d, 0x36, 0x31, 0x61,
	0xa3, 0xc1, 0x64, 0xbd, 0x31, 0xc6, 0x0b, 0x11, 0xca, 0x86, 0xd8, 0xb4, 0x64, 0x28, 0xc4, 0xbb,
	0x4d, 0x69, 0x07, 0x69, 0x28, 0x53, 0x52, 0xa8, 0x09, 0x0f, 0xe2, 0xa3, 0x79, 0xa1, 0x4f, 0x63,
	0x66, 0xda, 0x22, 0xac, 0xdc, 0x7d, 0xe7, 0x9c, 0xaf, 0xc3, 0x7c, 0xe7, 0xc7, 0xc0, 0xe5, 0x3a,
	0x8a, 0x97, 0x29, 0xa3, 0xdd, 0x4d, 0x91, 0xef, 0x72, 0x6c, 0xd4, 0xa5, 0xf3, 0x5b, 0x02, 0x23,
	0xcc, 0x57, 0x94, 0x8d, 0x3c, 0x7c, 0x0b, 0xea, 0x2a, 0x65, 0x89, 0x2d, 0xb5, 0xa5, 0xce, 0xd5,
	0xdd, 0xf3, 0x6e, 0xf3, 0x49, 0x3d, 0xef, 0x7e, 0x4d, 0x59, 0x42, 0x84, 0x05, 0x5f, 0x83, 0xf6,
	0x23, 0xca, 0x4a, 0x6a, 0xcb, 0x6d, 0xa9, 0x63, 0x91, 0xaa, 0xc0, 0x18, 0xd4, 0x2c, 0x65, 0xd4,
	0x56, 0xda, 0x52, 0xe7, 0x92, 0x08, 0x8d, 0x5b, 0xa0, 0xc7, 0x79, 0x56, 0xae, 0x99, 0xad, 0x8a,
	0x6e, 0x5d, 0x39, 0x11, 0xa8, 0xfc, 0x3c, 0x6c, 0x82, 0xea, 0x07, 0xbe, 0x8b, 0x2e, 0xb0, 0x05,
	0xda, 0xac, 0xe7, 0x4d, 0x5d, 0x24, 0xf1, 0x66, 0x30, 0x76, 0x7d, 0x24, 0xf3, 0x66, 0xdf, 0x0b,
	0x26, 0x2e, 0x52, 0xb0, 0x01, 0x8a, 0xeb, 0x0f, 0x90, 0xca, 0xc5, 0x20, 0x08, 0x91, 0xc6, 0x6d,
	0xe3, 0xd1, 0xd8, 0x45, 0x3a, 0x06, 0xd0, 0x7b, 0x93, 0xc9, 0xe8, 0xde, 0x47, 0x06, 0x1f, 0xcf,
	0x7a, 0x04, 0x99, 0xce, 0x2f, 0x05, 0x74, 0x3f, 0x4f, 0xe8, 0xc8, 0xc3, 0x57, 0x20, 0xa7, 0x55,
	0xb0, 0xa7, 0x44, 0x4e, 0x13, 0xdc, 0xa9, 0xa3, 0xca, 0x22, 0xea, 0xf5, 0x21, 0x6a, 0x65, 0x3f,
	0x4e, 0xfa, 0x06, 0xcc, 0x78, 0x99, 0x66, 0x49, 0x41, 0x99, 0xad, 0xb4, 0x95, 0xce, 0x93, 0xbb,
	0x67, 0x8f, 0xdc, 0xe4, 0x60, 0xc0, 0xb7, 0x60, 0xc4, 0xcb, 0x28, 0x65, 0x34, 0x11, 0x69, 0xcf,
	0x78, 0x9b, 0x39, 0x7e, 0xdb, 0x6c, 0x50, 0x13, 0xc6, 0xd6, 0xe3, 0x2b, 0x0c, 0x66, 0x7c, 0xda,
	0x6c, 0xf6, 0x05, 0x98, 0xdb, 0x72, 0xfe, 0xb0, 0xdb, 0x6f, 0xa8, 0xad, 0x8b, 0x95, 0x1b, 0xdb,
	0x72, 0x1e, 0xee, 0x37, 0xf4, 0xe6, 0xa7, 0x04, 0x7a, 0x65, 0xc6, 0xef, 0x4e, 0x00, 0xbe, 0x3c,
	0x7f, 0xe4, 0x71, 0x38, 0x04, 0xca, 0x76, 0x57, 0xd4, 0x10, 0xb9, 0xe4, 0x9d, 0x45, 0xb6, 0x13,
	0x04, 0x25, 0xc2, 0x25, 0x87, 0x3a, 0xcf, 0xf3, 0x4c, 0x04, 0x32, 0x89, 0xd0, 0x8e, 0x53, 0xc3,
	0x33, 0x40, 0x99, 0x84, 0x04, 0x5d, 0x70, 0x31, 0xf4, 0xc2, 0x8a, 0xdc, 0x97, 0x20, 0xf0, 0x90,
	0xec, 0x7c, 0xfb, 0x0f, 0xb0, 0x09, 0x2a, 0x09, 0x02, 0xee, 0xb2, 0x40, 0xbb, 0x27, 0xc1, 0x74,
	0x8c, 0x64, 0xde, 0x1c, 0x4e, 0xfd, 0x3e, 0x52, 0xfe, 0xf1, 0x57, 0x8f, 0x70, 0x6a, 0x0d, 0x4e,
	0x9d, 0x0b, 0xbf, 0x17, 0x22, 0xc3, 0xf9, 0x23, 0x81, 0x35, 0x2e, 0xf2, 0xef, 0x45, 0xb4, 0x3e,
	0x83, 0xb6, 0x05, 0xfa, 0x36, 0x2f, 0x8b, 0xb8, 0xf9, 0x6f, 0xd6, 0x15, 0x7e, 0x0d, 0x1a, 0x65,
	0xbb, 0x62, 0x2f, 0xb2, 0x9d, 0x21, 0x53, 0x4d, 0xf1, 0x67, 0x80, 0x45, 0xc9, 0xe2, 0x87, 0x38,
	0xca, 0xb2, 0xad, 0xad, 0x0a, 0xe2, 0xaf, 0x0e, 0xde, 0xc3, 0xcf, 0x76, 0x87, 0x25, 0x8b, 0xfb,
	0xdc, 0xe3, 0xf2, 0xcf, 0x88, 0xb5, 0x68, 0xea, 0x9b, 0x4f, 0x70, 0x75, 0x3a, 0xe4, 0x4b, 0x5d,
	0xd1, 0xbd, 0xb8, 0xa3, 0x45, 0xb8, 0x3c, 0x7d, 0x3f, 0x6a, 0x4d, 0xf9, 0xa3, 0xfc, 0x41, 0x9a,
	0xeb, 0xe2, 0x81, 0xbe, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xb2, 0x1a, 0x7a, 0xb1, 0x03,
	0x00, 0x00,
}
